{"version":3,"sources":["reportWebVitals.js","components/counter.jsx","components/cynicism.jsx","components/2.png","components/stress.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Counter","state","count","handleIncrement","setState","this","onClick","className","Component","Cynicism","Stress","punches","handlePunches","src","PunchBag","alt","useMap","name","shape","coords","href","showMsg","style","color","ReactDOM","render","document","getElementById","reactDom"],"mappings":"kLAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCeCQ,E,4MAnBXC,MAAQ,CACJC,MAAQ,G,EAYZC,gBAAkB,WACd,EAAKC,SAAS,CAAEF,MAAO,EAAKD,MAAMC,MAAQ,K,uDAT1C,OACI,gCACI,8BAAOG,KAAKJ,MAAMC,QAClB,wBAAQI,QAASD,KAAKF,gBAAiBI,UAAU,2BAAjD,8B,GATMC,aCSPC,E,4MARXR,MAAQ,G,uDAEJ,OACI,yD,GAJWO,aCFR,G,MAAA,IAA0B,+BC+C1BE,E,4MA3CXT,MAAQ,CACJU,QAAS,G,EAqCbC,cAAgB,WACZ,EAAKR,SAAS,CAAEO,QAAS,EAAKV,MAAMU,QAAU,K,uDAlC9C,OACI,gCACI,oBAAIJ,UAAU,cAAd,yBACA,4FACA,sBAAKA,UAAU,WAAf,UACI,2CAAcF,KAAKJ,MAAMU,WACzB,qBAAKE,IAAKC,EAAUC,IAAI,YAAYC,OAAO,cAC3C,qBAAKC,KAAK,WAAV,SACI,sBAAMV,UAAU,YAAYD,QAASD,KAAKO,cAAeM,MAAM,OAAOC,OAAO,gBAAgBJ,IAAI,MAAMK,KAAK,WAGpH,+BAAOf,KAAKgB,iB,gCAIb,IACAV,EAAWN,KAAKJ,MAAhBU,QACP,OAAgB,IAAZA,EACO,oBAAIW,MAAO,CAACC,MAAO,QAAnB,oCAES,IAAZZ,EACG,oEAES,IAAZA,EACG,6DAEHA,EAAU,GAAKA,GAAW,GACvB,uDAEFA,EAAU,GACR,oBAAIW,MAAO,CAACC,MAAO,OAAnB,kDADN,M,GAnCQf,aCMrBgB,IAASC,OACT,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,OAEDC,SAASC,eAAe,SAE3BC,IAASH,OAAO,cAAC,EAAD,IAAYC,SAASC,eAAe,WAKpDpC,M","file":"static/js/main.68036c66.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        count : 0\r\n    };\r\n    \r\n    render() { \r\n        return(\r\n            <div>\r\n                <div>{ this.state.count }</div>\r\n                <button onClick={this.handleIncrement} className=\"btn btn-secondary btn-sm\">Increment</button>\r\n            </div>\r\n        );\r\n                \r\n    }\r\n    handleIncrement = () => {\r\n        this.setState({ count: this.state.count + 1});\r\n    }\r\n    \r\n}\r\n \r\nexport default Counter;","import React, { Component } from 'react';\r\n\r\nclass Cynicism extends Component {\r\n    state = {  }\r\n    render() { \r\n        return ( \r\n            <div>Shit is here Boys!</div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default Cynicism;","export default __webpack_public_path__ + \"static/media/2.b29dbba6.png\";","import React, { Component } from 'react';\r\nimport './styling.css';\r\nimport PunchBag from './2.png';\r\nclass Stress extends Component {\r\n    state = {\r\n        punches: 0,\r\n    };\r\n\r\n    render() { \r\n        return ( \r\n            <div>\r\n                <h1 className=\"stressTitle\">Fuck Stress</h1>\r\n                <h4>How many punches would you like to hit to the stress ball?</h4>\r\n                <div className=\"punchDiv\">\r\n                    <h3>punches: {this.state.punches}</h3>\r\n                    <img src={PunchBag} alt=\"Punch Bag\" useMap=\"#punchmap\"/>\r\n                    <map name=\"punchmap\">\r\n                        <area className=\"punchArea\" onClick={this.handlePunches} shape=\"rect\" coords=\"0 170 100 437\" alt=\"bag\" href=\"#\"/>\r\n                    </map>\r\n                </div>\r\n                <span>{this.showMsg()}</span>\r\n            </div>\r\n        );\r\n    }\r\n    showMsg() {\r\n        const {punches} = this.state;\r\n        if (punches === 0) {\r\n            return <h2 style={{color: 'blue'}}>Han g mukka try krsoo?</h2>;\r\n        }\r\n        else if(punches === 1) {\r\n            return <h2>Waah g pehla mukka! Hor try krsoo?</h2>\r\n        }\r\n        else if(punches === 2) {\r\n            return <h2>Waah g hunh kam jaan diyooo</h2>\r\n        }\r\n        else if(punches > 2 && punches <= 10) {\r\n            return <h2>Lagee raho munna bhai</h2>\r\n        }\r\n        else if (punches > 10) {\r\n            return <h2 style={{color: 'red'}}>Calm down bhai calm down please</h2>;\r\n        }\r\n    }\r\n    handlePunches = () => {\r\n        this.setState({ punches: this.state.punches + 1});\r\n    }\r\n}\r\n \r\nexport default Stress;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Counter from './components/counter';\nimport Cynicism from './components/cynicism';\nimport Stress from './components/stress';\nimport reactDom from 'react-dom';\nReactDOM.render(\n<>\n    <Counter />\n    <Cynicism />\n</>\n,  document.getElementById('root'));\n\nreactDom.render(<Stress />, document.getElementById('stress'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}